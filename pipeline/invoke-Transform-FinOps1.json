{
    "name": "invoke-Transform-FinOps1",
    "properties": {
        "activities": [
            {
                "name": "Switch Dataflow",
                "type": "Switch",
                "dependsOn": [
                    {
                        "activity": "Set stagingDirectory for delta load",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "Set rawDirectory",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "LocalPipelineTriggerTime",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "Set watermarkValue",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "on": {
                        "value": "@pipeline().parameters.pipelineParameters.dataflow",
                        "type": "Expression"
                    },
                    "cases": [
                        {
                            "value": "dim_reciept_log",
                            "activities": [
                                {
                                    "name": "dim_reciept_log",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "dim_reciept_log",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "rawFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.rawFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "rawDirectory": {
                                                    "value": "'@{variables('rawDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(pipeline().parameters.pipelineParameters.rawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        pipeline().parameters.pipelineParameters.rawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "vendInvoiceJourManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).VendInvoiceJourrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "vendInvoiceJourManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).VendInvoiceJourrawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "vendPackingSlipJourManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).VendPackingSlipJourrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "vendPackingSlipJourManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).VendPackingSlipJourrawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "vendPurchOrderJourManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).VendPurchOrderJourrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "vendPurchOrderJourManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).VendPurchOrderJourrawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "stagingDirectory": {
                                                    "value": "'@{variables('stagingDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "purchLineManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).PurchLinerawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "purchLineManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).PurchLinerawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "dataLakeModified_DateTime": {
                                                    "value": "'@{variables('watermarkValue')}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "linkedServiceParameters": {
                                                "PurchTable": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "VendInvoiceJour": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "VendPackingSlipJour": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "VendPurchOrderJour": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "PurchLine": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "DimReceiptLog": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "integrationRuntime": {
                                            "referenceName": "AutoScaleIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        },
                        {
                            "value": "debtor",
                            "activities": [
                                {
                                    "name": "debtor",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "debtor",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "rawFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.rawFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "rawDirectory": {
                                                    "value": "'@{variables('rawDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(pipeline().parameters.pipelineParameters.rawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        pipeline().parameters.pipelineParameters.rawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "localTimeZone": {
                                                    "value": "'@{convertFromUtc(\n    pipeline().TriggerTime\n    ,json(string(pipeline().parameters.pipelineParameters)).localTimeZone\n)}'",
                                                    "type": "Expression"
                                                },
                                                "stagingFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.stagingFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "stagingDirectory": {
                                                    "value": "'@{variables('stagingDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "dirpartytablerawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).dirpartytablerawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "dirpartytablerawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).dirpartytablerawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "LogisticsPostalAddressrawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).LogisticsPostalAddressrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "LogisticsPostalAddressrawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).LogisticsPostalAddressrawFileName\n        ,'.'\n    )\n)\n}'",
                                                    "type": "Expression"
                                                },
                                                "DirPersonNamerawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).DirPersonNamerawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "DirPersonNamerawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).DirPersonNamerawFileName\n        ,'.'\n    )\n)\n}'",
                                                    "type": "Expression"
                                                },
                                                "ContactPersonrawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).ContactPersonrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "ContactPersonrawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).ContactPersonrawFileName\n        ,'.'\n    )\n)\n}'",
                                                    "type": "Expression"
                                                },
                                                "DirPersonrawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).DirPersonrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "DirPersonrawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).DirPersonrawFileName\n        ,'.'\n    )\n)\n}'",
                                                    "type": "Expression"
                                                },
                                                "TaxRegistrationrawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).TaxRegistrationrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "TaxRegistrationrawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).TaxRegistrationrawFileName\n        ,'.'\n    )\n)\n}'",
                                                    "type": "Expression"
                                                },
                                                "CredManCustGuaranteeInsurancerawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).CredManCustGuaranteeInsurancerawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "CredManCustGuaranteeInsurancerawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).CredManCustGuaranteeInsurancerawFileName\n        ,'.'\n    )\n)\n}'",
                                                    "type": "Expression"
                                                },
                                                "dirpartylocationrawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).DirPartyLocationrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "dirpartylocationrawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).DirPartyLocationrawFileName\n        ,'.'\n    )\n)\n}'",
                                                    "type": "Expression"
                                                },
                                                "logisticslocationrawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).LogisticsLocationrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "logisticslocationrawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).LogisticsLocationrawFileName\n        ,'.'\n    )\n)\n}'",
                                                    "type": "Expression"
                                                },
                                                "dataLakeModified_DateTime": {
                                                    "value": "'@{variables('watermarkValue')}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "financeKeyAccountManager": {
                                                    "datalakeURL": {
                                                        "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                        "type": "Expression"
                                                    },
                                                    "fileSystem": {
                                                        "value": "@toLower(\n    json(pipeline().parameters.pipelineParameters.dataflowDependencies).Finance_key_account_managerrawFileSystem\n)",
                                                        "type": "Expression"
                                                    },
                                                    "directory": {
                                                        "value": "@toLower(\n    json(pipeline().parameters.pipelineParameters.dataflowDependencies).Finance_key_account_managerrawDirectory\n)",
                                                        "type": "Expression"
                                                    },
                                                    "fileName": {
                                                        "value": "@toLower(\n    json(pipeline().parameters.pipelineParameters.dataflowDependencies).Finance_key_account_managerrawFileName\n)",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "linkedServiceParameters": {
                                                "custtable": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "logisticspostaladdress": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "dirpersonname": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "contactperson": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "dirperson": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "taxregistration": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "credmancustguaranteeinsurance": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "dirpartytable": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "dirpartylocation": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "logisticslocation": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "dimdebtortarget": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "getMaxSurrogateKey": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "dimdebtorupdate": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "dimdebtorinsert": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "integrationRuntime": {
                                            "referenceName": "AutoScaleIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "None",
                                        "cacheSinks": {
                                            "firstRowOnly": true
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "value": "dim_creditor",
                            "activities": [
                                {
                                    "name": "dim_creditor",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "dim_creditor",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "rawFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.rawFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "rawDirectory": {
                                                    "value": "'@{variables('rawDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(pipeline().parameters.pipelineParameters.rawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        pipeline().parameters.pipelineParameters.rawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "localTimeZone": {
                                                    "value": "'@{convertFromUtc(\n    pipeline().TriggerTime\n    ,json(string(pipeline().parameters.pipelineParameters)).localTimeZone\n)}'",
                                                    "type": "Expression"
                                                },
                                                "stagingFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.stagingFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "stagingDirectory": {
                                                    "value": "'@{variables('stagingDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "dirpartytablerawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).dirpartytablerawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "dirpartytablerawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).dirpartytablerawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "foxFndTradeAgreementrawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).FoxFndTradeAgreementPricerawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "foxFndTradeAgreementrawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).FoxFndTradeAgreementPricerawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "foxfndcomponentrawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).FoxFndComponentrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "foxfndcomponentrawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).FoxFndComponentrawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "dataLakeModified_DateTime": {
                                                    "value": "'@{variables('watermarkValue')}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "linkedServiceParameters": {
                                                "vendtable": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "dirpartytable": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "foxFndTradeAgreementPrice": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "foxfndtradeagreementmemberinclusion": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "foxfndcomponent": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "foxfndtradeagreementcomponent": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "dimcreditortarget": {
                                                    "linkedService": {
                                                        "datalakeURL": "https://cartersdevdatalake.dfs.core.windows.net"
                                                    }
                                                },
                                                "getMaxSurrogateKey": {
                                                    "linkedService": {
                                                        "datalakeURL": "https://cartersdevdatalake.dfs.core.windows.net"
                                                    }
                                                },
                                                "dimcreditorupdate": {
                                                    "linkedService": {
                                                        "datalakeURL": "https://cartersdevdatalake.dfs.core.windows.net"
                                                    }
                                                },
                                                "dimcreditorinsert": {
                                                    "linkedService": {
                                                        "datalakeURL": "https://cartersdevdatalake.dfs.core.windows.net"
                                                    }
                                                }
                                            }
                                        },
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "None",
                                        "cacheSinks": {
                                            "firstRowOnly": true
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "value": "dim_buying_group",
                            "activities": [
                                {
                                    "name": "dim_buying_group",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "buying_group_dim",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "rawFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.rawFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "rawDirectory": {
                                                    "value": "'@{variables('rawDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(pipeline().parameters.pipelineParameters.rawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        pipeline().parameters.pipelineParameters.rawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "stagingFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.stagingFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "stagingDirectory": {
                                                    "value": "'@{variables('stagingDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "dataLakeModified_DateTime": {
                                                    "value": "'@{variables('watermarkValue')}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "linkedServiceParameters": {
                                                "CustTable": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "BuyingGroupDim": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "integrationRuntime": {
                                            "referenceName": "AutoScaleIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        },
                        {
                            "value": "dim_credit_reason",
                            "activities": [
                                {
                                    "name": "dim_credit_reason",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "credit_reason_dim",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "rawFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.rawFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "rawDirectory": {
                                                    "value": "'@{variables('rawDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(pipeline().parameters.pipelineParameters.rawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        pipeline().parameters.pipelineParameters.rawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "stagingFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.stagingFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "stagingDirectory": {
                                                    "value": "'@{variables('stagingDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "dataLakeModified_DateTime": {
                                                    "value": "'@{variables('watermarkValue')}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "linkedServiceParameters": {
                                                "ReturnReasonCode": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "CreditReasonDim": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "integrationRuntime": {
                                            "referenceName": "AutoScaleIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        },
                        {
                            "value": "dim_price_override_reason",
                            "activities": [
                                {
                                    "name": "dim_price_override_reason",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "price_override_reason_dim",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "rawFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.rawFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "rawDirectory": {
                                                    "value": "'@{variables('rawDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(pipeline().parameters.pipelineParameters.rawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        pipeline().parameters.pipelineParameters.rawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "stagingFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.stagingFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "stagingDirectory": {
                                                    "value": "'@{variables('stagingDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "dataLakeModified_DateTime": {
                                                    "value": "'@{variables('watermarkValue')}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "linkedServiceParameters": {
                                                "FoxFndCategory": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL\n",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "PriceOverrideReasonDim": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL\n",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "integrationRuntime": {
                                            "referenceName": "AutoScaleIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        },
                        {
                            "value": "dim_sales_order_details",
                            "activities": [
                                {
                                    "name": "dim_sales_order_details",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "sales_order_details_dim",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "rawFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.rawFileSystem\n}'",
                                                    "type": "Expression"
                                                },
                                                "rawDirectory": {
                                                    "value": "'@{variables('rawDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(pipeline().parameters.pipelineParameters.rawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        pipeline().parameters.pipelineParameters.rawFileName\n        ,'.'\n    )\n)\n}'",
                                                    "type": "Expression"
                                                },
                                                "stagingFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.stagingFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "stagingDirectory": {
                                                    "value": "'@{variables('stagingDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "GeneralJournalEntryManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).GeneralJournalEntryrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "GeneralJournalEntryManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).GeneralJournalEntryrawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "CustInvoiceJourManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).CustInvoiceJourrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "CustInvoiceJourManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).CustInvoiceJourrawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "dataLakeModified_DateTime": {
                                                    "value": "'@{variables('watermarkValue')}'",
                                                    "type": "Expression"
                                                },
                                                "SalesLineManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).SalesLinerawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "SalesLineManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).SalesLinerawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "CustTableManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).CustTablerawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "CustTableManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).CustTablerawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "linkedServiceParameters": {
                                                "SalesTable": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL\n",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "GeneralJournalEntry": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL\n",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "CustInvoiceJour": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL\n",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "SalesLine": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL\n",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "CustTable": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL\n",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "SalesOrderDetailsDim": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL\n",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "integrationRuntime": {
                                            "referenceName": "AutoScaleIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        },
                        {
                            "value": "dim_sales_rep",
                            "activities": [
                                {
                                    "name": "dim_sales_rep",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "sales_rep_dim",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "rawFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.rawFileSystem\n}'",
                                                    "type": "Expression"
                                                },
                                                "rawDirectory": {
                                                    "value": "'@{variables('rawDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(pipeline().parameters.pipelineParameters.rawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        pipeline().parameters.pipelineParameters.rawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "stagingFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.stagingFileSystem\n}'",
                                                    "type": "Expression"
                                                },
                                                "stagingDirectory": {
                                                    "value": "'@{variables('stagingDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "HcmWorkerManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).HcmWorkerrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "HcmWorkerManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).HcmWorkerrawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "dataLakeModified_DateTime": {
                                                    "value": "'@{variables('watermarkValue')}'",
                                                    "type": "Expression"
                                                },
                                                "custtableManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).CustTablerawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "custtableManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).CustTablerawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "linkedServiceParameters": {
                                                "SalesTable": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL\n",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "HcmWorker": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL\n",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "CustTable": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "SalesRepDim": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL\n",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "integrationRuntime": {
                                            "referenceName": "AutoScaleIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        },
                        {
                            "value": "dim_pricing",
                            "activities": [
                                {
                                    "name": "dim_pricing",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "pricing_dim",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "rawFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.rawFileSystem\n}'",
                                                    "type": "Expression"
                                                },
                                                "rawDirectory": {
                                                    "value": "'@{variables('rawDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(pipeline().parameters.pipelineParameters.rawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        pipeline().parameters.pipelineParameters.rawFileName\n        ,'.'\n    )\n)\n}'",
                                                    "type": "Expression"
                                                },
                                                "stagingFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.stagingFileSystem\n}'",
                                                    "type": "Expression"
                                                },
                                                "stagingDirectory": {
                                                    "value": "'@{variables('stagingDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "dataLakeModified_DateTime": {
                                                    "value": "'@{variables('watermarkValue')}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "linkedServiceParameters": {
                                                "FoxFndComponent": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL\n",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "PricingDim": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL\n",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "integrationRuntime": {
                                            "referenceName": "AutoScaleIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        },
                        {
                            "value": "dim_rebates",
                            "activities": [
                                {
                                    "name": "dim_rebates",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "dim_rebates",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "rawFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.rawFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "rawDirectory": {
                                                    "value": "'@{variables('rawDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(pipeline().parameters.pipelineParameters.rawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        pipeline().parameters.pipelineParameters.rawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "localTimeZone": {
                                                    "value": "'@{convertFromUtc(\n    pipeline().TriggerTime\n    ,json(string(pipeline().parameters.pipelineParameters)).localTimeZone\n)}'",
                                                    "type": "Expression"
                                                },
                                                "stagingFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.stagingFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "stagingDirectory": {
                                                    "value": "'@{variables('stagingDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "foxFndTradeAgreementrawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).FoxFndTradeAgreementPricerawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "foxFndTradeAgreementrawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).FoxFndTradeAgreementPricerawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "FoxFndTradeAgreementClassrawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).FoxFndTradeAgreementClassrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "FoxFndTradeAgreementClassrawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).FoxFndTradeAgreementClassrawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "foxfndcomponentrawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).FoxFndComponentrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "foxfndcomponentrawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).FoxFndComponentrawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "dataLakeModified_DateTime": {
                                                    "value": "'@{variables('watermarkValue')}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "linkedServiceParameters": {
                                                "foxfndtradeagreementversion": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "foxfndtradeagreementclass": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "foxfndtradeagreementprice": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "foxfndtradeagreementcomponent": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "foxfndcomponent": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "foxfndtradeagreementmemberinclusion": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "dimrebatestarget": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "getMaxSurrogateKey": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "dimrebateupdate": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "dimrebatesinsert": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "integrationRuntime": {
                                            "referenceName": "AutoScaleIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "None",
                                        "cacheSinks": {
                                            "firstRowOnly": true
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "value": "dim_branch",
                            "activities": [
                                {
                                    "name": "dim_branch",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "dim_branch",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "rawFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.rawFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "rawDirectory": {
                                                    "value": "'@{variables('rawDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(pipeline().parameters.pipelineParameters.rawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        pipeline().parameters.pipelineParameters.rawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "stagingFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.stagingFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "stagingDirectory": {
                                                    "value": "'@{variables('stagingDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "dataLakeModified_DateTime": {
                                                    "value": "'@{variables('watermarkValue')}'",
                                                    "type": "Expression"
                                                },
                                                "OMHeirarchyRelationshipManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).OMHierarchyRelationshiprawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "OMHeirarchyRelationshipManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).OMHierarchyRelationshiprawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "DirPartyTableManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).DirPartyTablerawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "DirPartyTableManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).DirPartyTablerawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "DimensionAttributeValueSetMainifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).DimensionAttributeValueSetrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "DimensionAttributeValueSetManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).DimensionAttributeValueSetrawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "linkedServiceParameters": {
                                                "InventSite": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "OMHierarchyRelationship": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "DirPartyTable": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "DimensionAttributeValueSet": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "DimBranch": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "integrationRuntime": {
                                            "referenceName": "AutoScaleIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        },
                        {
                            "value": "dim_users",
                            "activities": [
                                {
                                    "name": "dim_users",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "dim_users",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "rawFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.rawFileSystem\n}'",
                                                    "type": "Expression"
                                                },
                                                "rawDirectory": {
                                                    "value": "'@{variables('rawDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(pipeline().parameters.pipelineParameters.rawDirectory,'/'),1)\n    ,'/'\n)\n}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        pipeline().parameters.pipelineParameters.rawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "HcmPositionWorkerAssignmentManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).HcmPositionWorkerAssignmentrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "HcmPositionWorkerAssignmentManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).HcmPositionWorkerAssignmentrawFileName\n        ,'.'\n    )\n)\n}'",
                                                    "type": "Expression"
                                                },
                                                "stagingFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.stagingFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "stagingDirectory": {
                                                    "value": "'@{variables('stagingDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "dataLakeModified_DateTime": {
                                                    "value": "'@{variables('watermarkValue')}'",
                                                    "type": "Expression"
                                                },
                                                "HcmPositionHierarchyManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).HcmPositionHierarchyrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "HcmPositionHierarchyManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).HcmPositionHierarchyrawFileName\n        ,'.'\n    )\n)\n}'",
                                                    "type": "Expression"
                                                },
                                                "HcmPositionManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(json(pipeline().parameters.pipelineParameters.dataflowDependencies).HcmPositionrawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "HcmPositionManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        json(pipeline().parameters.pipelineParameters.dataflowDependencies).HcmPositionrawFileName\n        ,'.'\n    )\n)\n}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "linkedServiceParameters": {
                                                "HcmPosition": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "HcmPositionWorkerAssignment": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "HcmPositionDetail": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "HcmWorker": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "HcmPositionHierarchy": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "UserInfo": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "DimUsers": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "integrationRuntime": {
                                            "referenceName": "AutoScaleIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        },
                        {
                            "value": "dim_stock_adjustment_reason",
                            "activities": [
                                {
                                    "name": "dim_stock_adjustment_reason",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "dim_stock_adjustment_reason",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "rawFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.rawFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "rawDirectory": {
                                                    "value": "'@{variables('rawDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFilePath": {
                                                    "value": "'@{join(\n    skip(split(pipeline().parameters.pipelineParameters.rawDirectory,'/'),1)\n    ,'/'\n)}'",
                                                    "type": "Expression"
                                                },
                                                "rawManifestFileName": {
                                                    "value": "'@{first(\n    split(\n        pipeline().parameters.pipelineParameters.rawFileName\n        ,'.'\n    )\n)}'",
                                                    "type": "Expression"
                                                },
                                                "stagingFileSystem": {
                                                    "value": "'@{pipeline().parameters.pipelineParameters.stagingFileSystem}'",
                                                    "type": "Expression"
                                                },
                                                "stagingDirectory": {
                                                    "value": "'@{variables('stagingDirectory')}'",
                                                    "type": "Expression"
                                                },
                                                "dataLakeModified_DateTime": {
                                                    "value": "'@{variables('watermarkValue')}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "linkedServiceParameters": {
                                                "InventCountingReasonCode": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "DimStockAdjustmentReason": {
                                                    "linkedService": {
                                                        "datalakeURL": {
                                                            "value": "@pipeline().parameters.pipelineParameters.stagingDatalakeURL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "integrationRuntime": {
                                            "referenceName": "AutoScaleIntegrationRuntime",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        }
                    ],
                    "defaultActivities": [
                        {
                            "name": "Execute invoke-Transform-FinOps2",
                            "type": "ExecutePipeline",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "pipeline": {
                                    "referenceName": "invoke-Transform-FinOps2",
                                    "type": "PipelineReference"
                                },
                                "waitOnCompletion": true,
                                "parameters": {
                                    "watermarkValue": {
                                        "value": "@variables('watermarkValue')",
                                        "type": "Expression"
                                    },
                                    "stagingDirectory": {
                                        "value": "@variables('stagingDirectory')",
                                        "type": "Expression"
                                    },
                                    "rawDirectory": {
                                        "value": "@variables('rawDirectory')",
                                        "type": "Expression"
                                    },
                                    "localPipelineTriggerTime": {
                                        "value": "@variables('_LocalPipelineTriggerTime')",
                                        "type": "Expression"
                                    },
                                    "pipelineParameters": {
                                        "value": "@pipeline().parameters.pipelineParameters",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    ]
                }
            },
            {
                "name": "Set stagingDirectory for delta load",
                "type": "SetVariable",
                "dependsOn": [],
                "policy": {
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "variableName": "stagingDirectory",
                    "value": {
                        "value": "@toLower(\n     concat(\n        pipeline().parameters.pipelineParameters.stagingDirectory\n        ,'/'\n        ,pipeline().parameters.pipelineParameters.rawEntity\n        ,'/v'\n        ,pipeline().parameters.pipelineParameters.dataflowVersion\n    )\n)",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Set rawDirectory",
                "type": "SetVariable",
                "dependsOn": [],
                "policy": {
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "variableName": "rawDirectory",
                    "value": {
                        "value": "@first(\n    split(\n        pipeline().parameters.pipelineParameters.rawDirectory\n        ,'/'\n        )\n)",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "LocalPipelineTriggerTime",
                "type": "SetVariable",
                "dependsOn": [],
                "policy": {
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "variableName": "_LocalPipelineTriggerTime",
                    "value": {
                        "value": "@convertFromUtc(\n    pipeline().TriggerTime\n    ,pipeline().parameters.pipelineParameters.LocalTimeZone\n)",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Set watermarkValue",
                "type": "SetVariable",
                "dependsOn": [],
                "policy": {
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "variableName": "watermarkValue",
                    "value": {
                        "value": "@if(\n    not(\n        empty(pipeline().parameters.watermarkValue)\n    )\n    , pipeline().parameters.watermarkValue\n    , '1900-01-01 00:00:00'\n)",
                        "type": "Expression"
                    }
                }
            }
        ],
        "parameters": {
            "pipelineParameters": {
                "type": "object",
                "defaultValue": {
                    "rawDatalakeURL": "https://cartersfinopstestexport.dfs.core.windows.net",
                    "localTimeZone": "New Zealand Standard Time",
                    "dataflow": "factsalesorderdetails",
                    "dataflowVersion": "0",
                    "processDelta": "True",
                    "loadEntityId": "320",
                    "keyVaultURL": "https://carters-dev-synapse-kv.vault.azure.net",
                    "sharePointURL": "https://carterholtharvey.sharepoint.com/sites/CartersSynapseDEV",
                    "tenantId": "33bf2332-a9ad-4005-835b-af44567b2122",
                    "sharePointServicePrincipalSecret": "CartersSynapseSharePointServicePrincipal",
                    "sharepointServicePrincipalID": "9220d657-b404-497f-8282-160909458317",
                    "sourceName": "Finops",
                    "loadType": "INCREMENTAL",
                    "rawFileSystem": "dynamics365-financeandoperations",
                    "rawDirectory": "carters-test.sandbox.operations.dynamics.com/Tables/SupplyChain/SalesAndMarketing/WorksheetHeader",
                    "rawFileName": "WorksheetHeader.manifest.cdm.json",
                    "rawEntity": "factsalesorderdetails",
                    "stagingDatalakeURL": "https://cartersdevdatalake.dfs.core.windows.net",
                    "stagingFileSystem": "2-staging",
                    "stagingDirectory": "CTR/TEST/Finops/Tables/SupplyChain/SalesAndMarketing/WorksheetHeader",
                    "database": "ctr_sales",
                    "schema": "dbo",
                    "keyColumns": "",
                    "localiseDateTime": "False",
                    "dataflowDependencies": "{'factsalesorderdetailsstagingFileSystem':'2-staging', 'factsalesorderdetailsstagingDirectory':'CTR/TEST/Finops/Tables/SupplyChain/SalesAndMarketing/WorksheetHeader', 'factsalesorderdetailsstagingEntityName':'factsalesorderdetails','SalesTablerawFileSystem':'dynamics365-financeandoperations','SalesTablerawDirectory':'carters-test.sandbox.operations.dynamics.com/Tables/SupplyChain/SalesAndMarketing/WorksheetHeader','SalesTablerawFileName':'WorksheetHeader.manifest.cdm.json','SalesLinerawFileSystem':'dynamics365-financeandoperations','SalesLinerawDirectory':'carters-test.sandbox.operations.dynamics.com/Tables/SupplyChain/SalesAndMarketing/WorksheetLine','SalesLinerawFileName':'WorksheetLine.manifest.cdm.json','CustPackingSlipTransrawFileSystem':'dynamics365-financeandoperations','CustPackingSlipTransrawDirectory':'carters-test.sandbox.operations.dynamics.com/Tables/SupplyChain/SalesAndMarketing/Transaction','CustPackingSlipTransrawFileName':'Transaction.manifest.cdm.json','CustTablerawFileSystem':'dynamics365-financeandoperations','CustTablerawDirectory':'carters-test.sandbox.operations.dynamics.com/Tables/Common/Customer/Main','CustTablerawFileName':'Main.manifest.cdm.json','PaymTermrawFileSystem':'dynamics365-financeandoperations','PaymTermrawDirectory':'carters-test.sandbox.operations.dynamics.com/Tables/Finance/Bank/Group','PaymTermrawFileName':'Group.manifest.cdm.json','CustInvoiceJourrawFileSystem':'dynamics365-financeandoperations','CustInvoiceJourrawDirectory':'carters-test.sandbox.operations.dynamics.com/Tables/Finance/AccountsReceivable/Transaction','CustInvoiceJourrawFileName':'Transaction.manifest.cdm.json'}",
                    "presentationDependencies": "{'dim_preferred_supplierfileSystem':'3-presentation','dim_preferred_supplierfileName':'dim_preferred_supplier','dim_preferred_supplierdirectory':'ctr_sales','dim_debtorfileSystem':'3-presentation','dim_debtorfileName':'dim_debtor','dim_debtordirectory':'ctr_sales','dim_productfileSystem':'3-presentation','dim_productfileName':'dim_product','dim_productdirectory':'ctr_sales','dim_product_focusfileSystem':'3-presentation','dim_product_focusfileName':'dim_product_focus','dim_product_focusdirectory':'ctr_sales','dim_customerfileSystem':'3-presentation','dim_customerfileName':'dim_customer','dim_customerdirectory':'ctr_sales','dim_buying_groupfileSystem':'3-presentation','dim_buying_groupfileName':'dim_buying_group','dim_buying_groupdirectory':'ctr_sales','dim_credit_reasonfileSystem':'3-presentation','dim_credit_reasonfileName':'dim_credit_reason','dim_credit_reasondirectory':'ctr_sales','dim_price_override_reasonfileSystem':'3-presentation','dim_price_override_reasonfileName':'dim_price_override_reason','dim_price_override_reasondirectory':'ctr_sales','dim_sales_order_detailsfileSystem':'3-presentation','dim_sales_order_detailsfileName':'dim_sales_order_details','dim_sales_order_detailsdirectory':'ctr_sales','dim_sales_repfileSystem':'3-presentation','dim_sales_repfileName':'dim_sales_rep','dim_sales_repdirectory':'ctr_sales','dim_pricingfileSystem':'3-presentation','dim_pricingfileName':'dim_pricing','dim_pricingdirectory':'ctr_sales','dim_branchfileSystem':'3-presentation','dim_branchfileName':'dim_branch','dim_branchdirectory':'ctr_sales'}"
                }
            },
            "watermarkValue": {
                "type": "string",
                "defaultValue": "1900-01-01 00:00:00"
            }
        },
        "variables": {
            "_LocalPipelineTriggerTime": {
                "type": "String"
            },
            "stagingDirectory": {
                "type": "String"
            },
            "rawDirectory": {
                "type": "String"
            },
            "watermarkValue": {
                "type": "String"
            }
        },
        "folder": {
            "name": "_framework/Transformations/FinOps"
        },
        "annotations": []
    }
}