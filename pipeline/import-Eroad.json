{
    "name": "import-Eroad",
    "properties": {
        "activities": [
            {
                "name": "Copy API using Auth Header",
                "type": "Copy",
                "dependsOn": [
                    {
                        "activity": "new-mapping",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "Set _LocalPipelineTriggerTime for Sharepoint_copy1",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "RestSource",
                        "additionalColumns": [
                            {
                                "name": "_LoadTimestamp",
                                "value": {
                                    "value": "@formatDateTime(utcNow(),'u')",
                                    "type": "Expression"
                                }
                            },
                            {
                                "name": "_LoadWorkspace",
                                "value": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                }
                            },
                            {
                                "name": "_LoadPipeline",
                                "value": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                }
                            },
                            {
                                "name": "_LoadPipelineRunId",
                                "value": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                }
                            },
                            {
                                "name": "_LoadPipelineTriggerId",
                                "value": {
                                    "value": "@pipeline().TriggerId",
                                    "type": "Expression"
                                }
                            },
                            {
                                "name": "_LoadPipelineTrigger",
                                "value": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                }
                            },
                            {
                                "name": "_LoadPipelineTriggerType",
                                "value": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                }
                            },
                            {
                                "name": "_LoadPipelineTriggerTime",
                                "value": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            },
                            {
                                "name": "_LoadPipelineTriggeredByPipeline",
                                "value": {
                                    "value": "@pipeline()?.TriggeredByPipelineName",
                                    "type": "Expression"
                                }
                            },
                            {
                                "name": "_LoadPipelineTriggeredByRunId",
                                "value": {
                                    "value": "@pipeline()?.TriggeredByPipelineRunId",
                                    "type": "Expression"
                                }
                            },
                            {
                                "name": "_LoadSource",
                                "value": {
                                    "value": "@pipeline().parameters.pipelineParameters.rawDirectory",
                                    "type": "Expression"
                                }
                            }
                        ],
                        "httpRequestTimeout": "00:01:40",
                        "requestInterval": "00.00:00:00.010",
                        "requestMethod": "GET",
                        "paginationRules": {
                            "QueryParameters.{offset}": "RANGE:0:3000:20"
                        }
                    },
                    "sink": {
                        "type": "ParquetSink",
                        "storeSettings": {
                            "type": "AzureBlobFSWriteSettings"
                        },
                        "formatSettings": {
                            "type": "ParquetWriteSettings"
                        }
                    },
                    "enableStaging": false,
                    "translator": {
                        "value": "@activity('new-mapping').output",
                        "type": "Expression"
                    }
                },
                "inputs": [
                    {
                        "referenceName": "REST_AuthorizationHeader",
                        "type": "DatasetReference",
                        "parameters": {
                            "url": {
                                "value": "@concat(\n    pipeline().parameters.pipelineParameters.server\n    ,'/'\n    ,pipeline().parameters.pipelineParameters.resourcepath\n    \n    \n)",
                                "type": "Expression"
                            },
                            "secret": {
                                "value": "@pipeline().parameters.pipelineParameters.secret",
                                "type": "Expression"
                            },
                            "relativeUrl": {
                                "value": "@concat(\n    '?limit=20&offset={offset}'\n)\n\n\n",
                                "type": "Expression"
                            },
                            "keyvaultURL": {
                                "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "outputs": [
                    {
                        "referenceName": "Parquet_DataLake",
                        "type": "DatasetReference",
                        "parameters": {
                            "datalakeURL": {
                                "value": "@pipeline().parameters.pipelineParameters.datalakeurl",
                                "type": "Expression"
                            },
                            "fileSystem": {
                                "value": "@toLower(pipeline().parameters.pipelineParameters.fileSystem)",
                                "type": "Expression"
                            },
                            "directory": {
                                "value": "@toLower(concat(\n    pipeline().parameters.pipelineParameters.rawDirectory\n    ,'/'\n    ,pipeline().parameters.pipelineParameters.table\n    ,'/year=',formatDateTime(variables('_LocalPipelineTriggerTime'),'yyyy')\n    ,'/month=',formatDateTime(variables('_LocalPipelineTriggerTime'),'MM')\n    ,'/day=',formatDateTime(variables('_LocalPipelineTriggerTime'),'dd')\n))",
                                "type": "Expression"
                            },
                            "fileName": {
                                "value": "@toLower(concat(\n    pipeline().parameters.pipelineParameters.table\n    ,'_'\n    ,formatDateTime(\n        variables('_LocalPipelineTriggerTime')\n        ,'yyyy-MM-dd_HH-mm-ss'\n    )\n    ,'.parquet'\n)\n)",
                                "type": "Expression"
                            }
                        }
                    }
                ]
            },
            {
                "name": "get-FieldMappingsSharePoint",
                "type": "Lookup",
                "dependsOn": [],
                "policy": {
                    "timeout": "0.00:20:00",
                    "retry": 1,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "SharePointOnlineListSource",
                        "query": {
                            "value": "$filter = @{pipeline().parameters.pipelineParameters.mappingFieldsFilter}",
                            "type": "Expression"
                        },
                        "httpRequestTimeout": "00:05:00"
                    },
                    "dataset": {
                        "referenceName": "SharePointList",
                        "type": "DatasetReference",
                        "parameters": {
                            "list": "FieldMapping",
                            "sharepointURL": {
                                "value": "@pipeline().parameters.pipelineParameters.sharepointURL",
                                "type": "Expression"
                            },
                            "tenantID": {
                                "value": "@pipeline().parameters.pipelineParameters.tenantID",
                                "type": "Expression"
                            },
                            "sharepointServicePrincipalID": {
                                "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalID",
                                "type": "Expression"
                            },
                            "sharepointServicePrincipalSecret": {
                                "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalSecret",
                                "type": "Expression"
                            },
                            "keyvaultURL": {
                                "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                "type": "Expression"
                            }
                        }
                    },
                    "firstRowOnly": false
                }
            },
            {
                "name": "new-mapping",
                "type": "AzureFunctionActivity",
                "dependsOn": [
                    {
                        "activity": "get-FieldMappingsSharePoint",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "get-DefaultAdditionalColumnsSharePoint",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.00:20:00",
                    "retry": 1,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "functionName": "new-mapping",
                    "method": "POST",
                    "body": {
                        "value": "{\n\"entityColumns\": @{activity('get-FieldMappingsSharePoint').output.value},\n\"additionalColumns\": @{activity('get-DefaultAdditionalColumnsSharePoint').output.value},\n\"collectionReference\": \"@{pipeline().parameters.pipelineParameters.collectionReference}\"\n}",
                        "type": "Expression"
                    }
                },
                "linkedServiceName": {
                    "referenceName": "PowerShellFunction",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "functionAppURL": {
                            "value": "@pipeline().parameters.pipelineParameters.functionAppURL",
                            "type": "Expression"
                        },
                        "secretName": {
                            "value": "@pipeline().parameters.pipelineParameters.powerShellFunctionServicePrincipalSecret",
                            "type": "Expression"
                        },
                        "keyvaultURL": {
                            "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                            "type": "Expression"
                        }
                    }
                }
            },
            {
                "name": "get-DefaultAdditionalColumnsSharePoint",
                "type": "Lookup",
                "dependsOn": [],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "SharePointOnlineListSource",
                        "httpRequestTimeout": "00:05:00"
                    },
                    "dataset": {
                        "referenceName": "SharePointList",
                        "type": "DatasetReference",
                        "parameters": {
                            "list": "DefaultAdditionalColumn",
                            "sharepointURL": {
                                "value": "@pipeline().parameters.pipelineParameters.sharepointURL",
                                "type": "Expression"
                            },
                            "tenantID": {
                                "value": "@pipeline().parameters.pipelineParameters.tenantID",
                                "type": "Expression"
                            },
                            "sharepointServicePrincipalID": {
                                "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalID",
                                "type": "Expression"
                            },
                            "sharepointServicePrincipalSecret": {
                                "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalSecret",
                                "type": "Expression"
                            },
                            "keyvaultURL": {
                                "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                "type": "Expression"
                            }
                        }
                    },
                    "firstRowOnly": false
                }
            },
            {
                "name": "Set _LocalPipelineTriggerTime for Sharepoint_copy1",
                "type": "SetVariable",
                "dependsOn": [],
                "policy": {
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "variableName": "_LocalPipelineTriggerTime",
                    "value": {
                        "value": "@convertFromUtc(\n    pipeline().TriggerTime\n    ,pipeline().parameters.pipelineParameters.localTimeZone\n)",
                        "type": "Expression"
                    }
                }
            }
        ],
        "parameters": {
            "pipelineParameters": {
                "type": "object",
                "defaultValue": {
                    "datalakeurl": "https://cartersdevdatalake.dfs.core.windows.net",
                    "sourceName": "Eroad",
                    "functionalArea": "Logistics",
                    "companyCode": "CTR",
                    "fileSystem": "1-raw",
                    "forceLoad": "False",
                    "user": "",
                    "secret": "CartersEroadApiKey",
                    "watermarkField": "",
                    "loadType": "FULL",
                    "schema": "",
                    "authType": "HeaderAuth",
                    "Server": "https://api.apac.eroad.com",
                    "rawDirectory": "Eroad",
                    "table": "Vehicle",
                    "database": "",
                    "localTimeZone": "New Zealand Standard Time",
                    "IR": "OnPremises",
                    "sourceType": "Eroad",
                    "mappingFieldsFilter": "SourceEntityNameId eq 133",
                    "keyvaultURL": "https://carters-dev-synapse-kv.vault.azure.net",
                    "functionAppURL": "https://carters-nonprod-synapse-ps-fnapp.azurewebsites.net",
                    "powerShellFunctionServicePrincipalSecret": "CartersSynapsePowerShellFunctionServicePrincipal",
                    "sharePointURL": "https://carterholtharvey.sharepoint.com/sites/CartersSynapseDEV",
                    "sharepointServicePrincipalID": "9220d657-b404-497f-8282-160909458317",
                    "sharepointServicePrincipalSecret": "CartersSynapseSharePointServicePrincipal",
                    "tenantId": "33bf2332-a9ad-4005-835b-af44567b2122",
                    "resourcePath": "v1/drivers",
                    "entityFilter": "",
                    "delimiter": "",
                    "firstRowHeader": "",
                    "entityType": "API",
                    "collectionReference": "drivers"
                }
            }
        },
        "variables": {
            "loadData": {
                "type": "Boolean"
            },
            "loadStart": {
                "type": "String"
            },
            "sourceFilter": {
                "type": "String"
            },
            "authTypeIR": {
                "type": "String"
            },
            "_LocalPipelineTriggerTime": {
                "type": "String"
            }
        },
        "folder": {
            "name": "_framework/Sources"
        },
        "annotations": []
    }
}