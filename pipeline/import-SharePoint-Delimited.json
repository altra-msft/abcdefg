{
    "name": "import-SharePoint-Delimited",
    "properties": {
        "activities": [
            {
                "name": "ForEach File",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "Set SharePoint Files List",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@variables('fileList')",
                        "type": "Expression"
                    },
                    "isSequential": true,
                    "activities": [
                        {
                            "name": "Set File URL",
                            "type": "SetVariable",
                            "dependsOn": [],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "fileURL",
                                "value": {
                                    "value": "@concat(\n        pipeline().parameters.pipelineParameters.server\n        ,'/_api/web/GetFileByServerRelativeUrl('\n            ,''''\n            ,item().ServerRelativeUrl\n            ,''')'\n)\n    ",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "Check load type for watermark",
                            "type": "IfCondition",
                            "dependsOn": [
                                {
                                    "activity": "Set File URL",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "expression": {
                                    "value": "@equals(\n    'INCREMENTAL'\n    ,toUpper(pipeline().parameters.pipelineParameters.loadType)\n)",
                                    "type": "Expression"
                                },
                                "ifTrueActivities": [
                                    {
                                        "name": "Get SharePoint File Metadata",
                                        "type": "WebActivity",
                                        "dependsOn": [],
                                        "policy": {
                                            "timeout": "0.12:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "url": {
                                                "value": "@variables('fileURL')",
                                                "type": "Expression"
                                            },
                                            "connectVia": {
                                                "referenceName": "AutoScaleIntegrationRuntime",
                                                "type": "IntegrationRuntimeReference"
                                            },
                                            "method": "GET",
                                            "headers": {
                                                "Authorization": {
                                                    "value": "@{concat('Bearer ',activity('Get Bearer token').output.access_token)}",
                                                    "type": "Expression"
                                                },
                                                "Accept": "Application/json"
                                            }
                                        }
                                    },
                                    {
                                        "name": "Set SharePoint File LastModified",
                                        "type": "SetVariable",
                                        "dependsOn": [
                                            {
                                                "activity": "Get SharePoint File Metadata",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            }
                                        ],
                                        "policy": {
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "variableName": "fileLastModified",
                                            "value": {
                                                "value": "@activity('Get SharePoint File Metadata').output.TimeLastModified",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Check Load Data",
                            "description": "",
                            "type": "IfCondition",
                            "dependsOn": [
                                {
                                    "activity": "Check load type for watermark",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "expression": {
                                    "value": "@or(\n    or(\n        pipeline().parameters.loadData\n        ,greater(\n            variables('fileLastModified') \n            ,convertFromUtc(\n                pipeline().parameters.rawMaxLoadTime\n                , pipeline().parameters.pipelineParameters.localTimeZone\n            )\n        )\n    )\n    ,bool(\n        coalesce(\n            pipeline().parameters.pipelineParameters.forceLoad\n            ,false\n        )\n    )\n)",
                                    "type": "Expression"
                                },
                                "ifTrueActivities": [
                                    {
                                        "name": "Copy Delimited FIle",
                                        "type": "Copy",
                                        "dependsOn": [
                                            {
                                                "activity": "Set _LocalPipelineTriggerTime for Sharepoint",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            },
                                            {
                                                "activity": "new-mapping-sharepoint",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            }
                                        ],
                                        "policy": {
                                            "timeout": "0.12:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "source": {
                                                "type": "DelimitedTextSource",
                                                "additionalColumns": [
                                                    {
                                                        "name": "_LoadTimestamp",
                                                        "value": {
                                                            "value": "@formatDateTime(utcNow(),'u')",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    {
                                                        "name": "_LoadWorkspace",
                                                        "value": {
                                                            "value": "@pipeline().DataFactory",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    {
                                                        "name": "_LoadPipeline",
                                                        "value": {
                                                            "value": "@pipeline().Pipeline",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    {
                                                        "name": "_LoadPipelineRunId",
                                                        "value": {
                                                            "value": "@pipeline().RunId",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    {
                                                        "name": "_LoadPipelineTriggerId",
                                                        "value": {
                                                            "value": "@pipeline().TriggerId",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    {
                                                        "name": "_LoadPipelineTrigger",
                                                        "value": {
                                                            "value": "@pipeline().TriggerName",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    {
                                                        "name": "_LoadPipelineTriggerType",
                                                        "value": {
                                                            "value": "@pipeline().TriggerType",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    {
                                                        "name": "_LoadPipelineTriggerTime",
                                                        "value": {
                                                            "value": "@pipeline().TriggerTime",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    {
                                                        "name": "_LoadPipelineTriggeredByPipeline",
                                                        "value": {
                                                            "value": "@pipeline()?.TriggeredByPipelineName",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    {
                                                        "name": "_LoadPipelineTriggeredByRunId",
                                                        "value": {
                                                            "value": "@pipeline()?.TriggeredByPipelineRunId",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    {
                                                        "name": "_LoadSource",
                                                        "value": {
                                                            "value": "@pipeline().parameters.pipelineParameters.rawDirectory",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                ],
                                                "storeSettings": {
                                                    "type": "HttpReadSettings",
                                                    "requestMethod": "GET",
                                                    "additionalHeaders": {
                                                        "value": "@{concat('Authorization: Bearer ',activity('Get Bearer token').output.access_token)}",
                                                        "type": "Expression"
                                                    },
                                                    "requestTimeout": ""
                                                },
                                                "formatSettings": {
                                                    "type": "DelimitedTextReadSettings"
                                                }
                                            },
                                            "sink": {
                                                "type": "ParquetSink",
                                                "storeSettings": {
                                                    "type": "AzureBlobFSWriteSettings"
                                                },
                                                "formatSettings": {
                                                    "type": "ParquetWriteSettings"
                                                }
                                            },
                                            "enableStaging": false,
                                            "translator": {
                                                "value": "@activity('new-mapping-sharepoint').output",
                                                "type": "Expression"
                                            }
                                        },
                                        "inputs": [
                                            {
                                                "referenceName": "HTTP_Delimited",
                                                "type": "DatasetReference",
                                                "parameters": {
                                                    "delimiter": {
                                                        "value": "@concat(pipeline().parameters.pipelineParameters.delimiter)",
                                                        "type": "Expression"
                                                    },
                                                    "url": {
                                                        "value": "@concat(\n    variables('fileURL')\n    ,'/$value'\n)",
                                                        "type": "Expression"
                                                    },
                                                    "firstRowHeader": {
                                                        "value": "@pipeline().parameters.pipelineParameters.firstRowHeader",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "referenceName": "Parquet_DataLake",
                                                "type": "DatasetReference",
                                                "parameters": {
                                                    "datalakeURL": {
                                                        "value": "@pipeline().parameters.pipelineParameters.datalakeURL",
                                                        "type": "Expression"
                                                    },
                                                    "fileSystem": {
                                                        "value": "@toLower(pipeline().parameters.pipelineParameters.fileSystem)",
                                                        "type": "Expression"
                                                    },
                                                    "directory": {
                                                        "value": "@toLower(concat(\n    pipeline().parameters.pipelineParameters.rawDirectory\n    ,'/'\n    ,pipeline().parameters.pipelineParameters.table\n    ,'/year=',formatDateTime(variables('_LocalPipelineTriggerTime'),'yyyy')\n    ,'/month=',formatDateTime(variables('_LocalPipelineTriggerTime'),'MM')\n    ,'/day=',formatDateTime(variables('_LocalPipelineTriggerTime'),'dd')\n)\n)",
                                                        "type": "Expression"
                                                    },
                                                    "fileName": {
                                                        "value": "@toLower(concat(\n    first(split(\n        last(split(variables('fileURL'),'/'))\n        ,'.'\n    )\n    )\n    ,'.parquet'\n)\n)",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "name": "Set _LocalPipelineTriggerTime for Sharepoint",
                                        "type": "SetVariable",
                                        "dependsOn": [],
                                        "policy": {
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "variableName": "_LocalPipelineTriggerTime",
                                            "value": {
                                                "value": "@convertFromUtc(\n    pipeline().TriggerTime\n    ,pipeline().parameters.pipelineParameters.localTimeZone\n)",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    {
                                        "name": "get-FieldMappingsSharePoint",
                                        "type": "Lookup",
                                        "dependsOn": [],
                                        "policy": {
                                            "timeout": "0.00:20:00",
                                            "retry": 1,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "source": {
                                                "type": "SharePointOnlineListSource",
                                                "query": {
                                                    "value": "$filter = @{pipeline().parameters.pipelineParameters.mappingFieldsFilter}",
                                                    "type": "Expression"
                                                },
                                                "httpRequestTimeout": "00:05:00"
                                            },
                                            "dataset": {
                                                "referenceName": "SharePointList",
                                                "type": "DatasetReference",
                                                "parameters": {
                                                    "list": "FieldMapping",
                                                    "sharepointURL": {
                                                        "value": "@pipeline().parameters.pipelineParameters.sharepointURL",
                                                        "type": "Expression"
                                                    },
                                                    "tenantID": {
                                                        "value": "@pipeline().parameters.pipelineParameters.tenantID",
                                                        "type": "Expression"
                                                    },
                                                    "sharepointServicePrincipalID": {
                                                        "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalID",
                                                        "type": "Expression"
                                                    },
                                                    "sharepointServicePrincipalSecret": {
                                                        "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalSecret",
                                                        "type": "Expression"
                                                    },
                                                    "keyvaultURL": {
                                                        "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "firstRowOnly": false
                                        }
                                    },
                                    {
                                        "name": "new-mapping-sharepoint",
                                        "type": "AzureFunctionActivity",
                                        "dependsOn": [
                                            {
                                                "activity": "get-FieldMappingsSharePoint",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            },
                                            {
                                                "activity": "get-DefaultAdditionalColumnsSharePoint",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            }
                                        ],
                                        "policy": {
                                            "timeout": "0.00:20:00",
                                            "retry": 1,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "functionName": "new-mapping",
                                            "method": "POST",
                                            "body": {
                                                "value": "{\n\"entityColumns\": @{activity('get-FieldMappingsSharePoint').output.value},\n\"additionalColumns\": @{activity('get-DefaultAdditionalColumnsSharePoint').output.value}\n}",
                                                "type": "Expression"
                                            }
                                        },
                                        "linkedServiceName": {
                                            "referenceName": "PowerShellFunction",
                                            "type": "LinkedServiceReference",
                                            "parameters": {
                                                "functionAppURL": {
                                                    "value": "@pipeline().parameters.pipelineParameters.functionAppURL",
                                                    "type": "Expression"
                                                },
                                                "secretName": {
                                                    "value": "@pipeline().parameters.pipelineParameters.powerShellFunctionServicePrincipalSecret",
                                                    "type": "Expression"
                                                },
                                                "keyvaultURL": {
                                                    "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "name": "get-DefaultAdditionalColumnsSharePoint",
                                        "type": "Lookup",
                                        "dependsOn": [],
                                        "policy": {
                                            "timeout": "0.12:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "source": {
                                                "type": "SharePointOnlineListSource",
                                                "httpRequestTimeout": "00:05:00"
                                            },
                                            "dataset": {
                                                "referenceName": "SharePointList",
                                                "type": "DatasetReference",
                                                "parameters": {
                                                    "list": "DefaultAdditionalColumn",
                                                    "sharepointURL": {
                                                        "value": "@pipeline().parameters.pipelineParameters.sharepointURL",
                                                        "type": "Expression"
                                                    },
                                                    "tenantID": {
                                                        "value": "@pipeline().parameters.pipelineParameters.tenantID",
                                                        "type": "Expression"
                                                    },
                                                    "sharepointServicePrincipalID": {
                                                        "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalID",
                                                        "type": "Expression"
                                                    },
                                                    "sharepointServicePrincipalSecret": {
                                                        "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalSecret",
                                                        "type": "Expression"
                                                    },
                                                    "keyvaultURL": {
                                                        "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "firstRowOnly": false
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "name": "Get ClientSecret",
                "type": "WebActivity",
                "dependsOn": [],
                "policy": {
                    "timeout": "0.00:10:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": {
                        "value": "@concat(\n    pipeline().parameters.pipelineParameters.keyvaultURL\n    ,'/secrets/'\n    ,pipeline().parameters.pipelineParameters.secret\n    ,'?api-version=7.0'\n)",
                        "type": "Expression"
                    },
                    "connectVia": {
                        "referenceName": "AutoScaleIntegrationRuntime",
                        "type": "IntegrationRuntimeReference"
                    },
                    "method": "GET",
                    "authentication": {
                        "type": "MSI",
                        "resource": "https://vault.azure.net"
                    }
                }
            },
            {
                "name": "Get Bearer token",
                "description": "Get Bearer token for SharePoint ",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "Get ClientSecret",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.00:10:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": true,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": {
                        "value": "@concat(\n    'https://accounts.accesscontrol.windows.net/'\n    ,pipeline().parameters.pipelineParameters.TenantId\n    ,'/tokens/OAuth/2'\n)",
                        "type": "Expression"
                    },
                    "connectVia": {
                        "referenceName": "AutoScaleIntegrationRuntime",
                        "type": "IntegrationRuntimeReference"
                    },
                    "method": "POST",
                    "headers": {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    "body": {
                        "value": "@concat(\n    'grant_type=client_credentials&client_id='\n        ,pipeline().parameters.pipelineParameters.user\n        ,'@',pipeline().parameters.pipelineParameters.tenantId\n    ,'&client_secret=',activity('Get ClientSecret').output.value\n    ,'&resource=00000003-0000-0ff1-ce00-000000000000/carterholtharvey.sharepoint.com@'\n    ,pipeline().parameters.pipelineParameters.tenantId\n)",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Set SharePoint Files List",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "Get SharePoint Files List",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "variableName": "fileList",
                    "value": {
                        "value": "@activity('Get SharePoint Files List').output.value",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Get SharePoint Files List",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "Get Bearer token",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": {
                        "value": "@concat(\n    pipeline().parameters.pipelineParameters.server\n    ,'/_api/web/GetFolderByServerRelativeUrl('\n    ,''''\n    ,pipeline().parameters.pipelineParameters.resourcePath\n    ,''')/Files'\n    ,pipeline().parameters.pipelineParameters.EntityFilter\n)",
                        "type": "Expression"
                    },
                    "connectVia": {
                        "referenceName": "AutoScaleIntegrationRuntime",
                        "type": "IntegrationRuntimeReference"
                    },
                    "method": "GET",
                    "headers": {
                        "Authorization": {
                            "value": "@{concat('Bearer ',activity('Get Bearer token').output.access_token)}",
                            "type": "Expression"
                        },
                        "Accept": "Application/json"
                    }
                }
            }
        ],
        "parameters": {
            "pipelineParameters": {
                "type": "object",
                "defaultValue": {
                    "datalakeurl": "https://cartersdevdatalake.dfs.core.windows.net",
                    "sourceName": "EDWFileshare",
                    "functionalArea": "HumanResources",
                    "companyCode": "CTR",
                    "fileSystem": "1-raw",
                    "forceLoad": "False",
                    "user": "svcCTRSynapseDEV@chhnet.net",
                    "secret": "svcCTRSynapse",
                    "watermarkField": "",
                    "loadType": "FULL",
                    "schema": "",
                    "authType": "Windows",
                    "Server": "melctrdbs02.chhnet.net",
                    "rawDirectory": "CTR/PROD/EDWFileshare",
                    "table": "DAILY_VEHICLE_UTILISATION",
                    "database": "",
                    "localTimeZone": "New Zealand Standard Time",
                    "IR": "OnPremises",
                    "sourceType": "FileShare",
                    "mappingFieldsFilter": "SourceEntityNameId eq 159",
                    "keyvaultURL": "https://carters-dev-synapse-kv.vault.azure.net",
                    "functionAppURL": "https://carters-nonprod-synapse-ps-fnapp.azurewebsites.net",
                    "powerShellFunctionServicePrincipalSecret": "CartersSynapsePowerShellFunctionServicePrincipal",
                    "sharePointURL": "https://carterholtharvey.sharepoint.com/sites/CartersSynapseDEV",
                    "sharepointServicePrincipalID": "9220d657-b404-497f-8282-160909458317",
                    "sharepointServicePrincipalSecret": "CartersSynapseSharePointServicePrincipal",
                    "tenantId": "33bf2332-a9ad-4005-835b-af44567b2122",
                    "resourcePath": "EDWProd/prod/chris21/carters",
                    "entityFilter": "ETL_3167_16_1_DAILY_VEHICLE_UTILISATION_REPORT_FOR_CARTERS_BUILDING_SUPPLIES_GROUP_LIMITED_OVER_PERIOD_DAILY_ENDING_ON_yyyymmdd.csv",
                    "delimiter": ",",
                    "firstRowHeader": "True",
                    "collectionReference": "",
                    "entityType": "Delimited"
                }
            },
            "loadData": {
                "type": "bool"
            },
            "rawMaxLoadTime": {
                "type": "string"
            }
        },
        "variables": {
            "fileURL": {
                "type": "String"
            },
            "fileLastModified": {
                "type": "String"
            },
            "fileList": {
                "type": "Array"
            },
            "columnMappings": {
                "type": "String"
            },
            "_LocalPipelineTriggerTime": {
                "type": "String"
            },
            "defaultAdditionalColumns": {
                "type": "String"
            }
        },
        "folder": {
            "name": "_framework/Sources"
        },
        "annotations": []
    }
}