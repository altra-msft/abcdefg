{
    "name": "import-Vworks",
    "properties": {
        "activities": [
            {
                "name": "Get ClientSecret",
                "type": "WebActivity",
                "dependsOn": [],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": {
                        "value": "@concat(\n    pipeline().parameters.pipelineParameters.keyvaultURL\n    ,'/secrets/'\n    ,pipeline().parameters.pipelineParameters.secret\n    ,'/?api-version=7.0'\n)",
                        "type": "Expression"
                    },
                    "connectVia": {
                        "referenceName": "AutoResolveIntegrationRuntime",
                        "type": "IntegrationRuntimeReference"
                    },
                    "method": "GET",
                    "authentication": {
                        "type": "MSI",
                        "resource": "https://vault.azure.net"
                    }
                }
            },
            {
                "name": "Check Load Type",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "Get ClientSecret",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@equals('FULL', toUpper(pipeline().parameters.pipelineParameters.loadType))",
                        "type": "Expression"
                    },
                    "ifFalseActivities": [
                        {
                            "name": "Lookup Latest File in Raw",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.00:20:00",
                                "retry": 1,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "SqlDWSource",
                                    "sqlReaderQuery": {
                                        "value": "@concat('SELECT\n    max([result].filepath()) as latestFile\nFROM\n    OPENROWSET(\n        BULK '''\n        ,pipeline().parameters.pipelineParameters.datalakeURL\n        ,'/'\n        ,toLower(pipeline().parameters.pipelineParameters.fileSystem)\n        ,'/'\n        ,toLower(pipeline().parameters.pipelineParameters.rawDirectory)\n        ,'/'\n        ,toLower(pipeline().parameters.pipelineParameters.table)\n        ,'/year=*/month=*/day=*/*.parquet'', FORMAT=''PARQUET''\n    ) AS [result]')",
                                        "type": "Expression"
                                    },
                                    "queryTimeout": "02:00:00",
                                    "partitionOption": "None"
                                },
                                "dataset": {
                                    "referenceName": "AzureSynapseAnalyticsServerlessSQLQuery",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "database": {
                                            "value": "default",
                                            "type": "Expression"
                                        },
                                        "synapseWorkspaceName": {
                                            "value": "@pipeline().DataFactory",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "name": "Lookup Latest Record in Raw",
                            "type": "Lookup",
                            "dependsOn": [
                                {
                                    "activity": "Lookup Latest File in Raw",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "0.00:20:00",
                                "retry": 1,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "SqlDWSource",
                                    "sqlReaderQuery": {
                                        "value": "@concat('SELECT\n    max([',pipeline().parameters.pipelineParameters.watermarkField,']) as watermarkValue\nFROM\n    OPENROWSET(\n        BULK ''',activity('Lookup Latest File in Raw').output.firstRow.latestFile,''', FORMAT=''PARQUET''\n    ) AS [result]')",
                                        "type": "Expression"
                                    },
                                    "queryTimeout": "02:00:00",
                                    "partitionOption": "None"
                                },
                                "dataset": {
                                    "referenceName": "AzureSynapseAnalyticsServerlessSQLQuery",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "database": {
                                            "value": "default",
                                            "type": "Expression"
                                        },
                                        "synapseWorkspaceName": {
                                            "value": "@pipeline().DataFactory",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "name": "Set Api Filter from latest record in raw",
                            "description": "",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Lookup Latest Record in Raw",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "apiFilterCriteria",
                                "value": {
                                    "value": "@concat(\n    pipeline().parameters.pipelineParameters.watermarkField\n    ,'='\n    ,activity('Lookup Latest Record in Raw').output.firstRow.watermarkValue\n)",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "Set Api Filter from latest record in raw_copy1",
                            "description": "",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Lookup Latest File in Raw",
                                    "dependencyConditions": [
                                        "Failed"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "apiFilterCriteria",
                                "value": {
                                    "value": "@concat('')",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "Get new data",
                            "type": "AzureFunctionActivity",
                            "dependsOn": [
                                {
                                    "activity": "Set Api Filter from latest record in raw",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "0.00:20:00",
                                "retry": 1,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "functionName": "get-vWorks-json-response",
                                "method": "POST",
                                "body": {
                                    "value": "{\n\"collectionReference\": \"@{pipeline().parameters.pipelineParameters.collectionReference}\",\n\"requestURL\": \"@{concat(\n                    pipeline().parameters.pipelineParameters.server\n                    , '/'\n                    ,pipeline().parameters.pipelineParameters.resourcepath\n                    ,'?api_key='\n                    ,activity('Get ClientSecret').output.value\n                    ,'&with_deleted=true&'\n                    ,variables('apiFilterCriteria')\n                )}\",\n\"reqestType\": \"Get\"\n}",
                                    "type": "Expression"
                                }
                            },
                            "linkedServiceName": {
                                "referenceName": "PowerShellFunction",
                                "type": "LinkedServiceReference",
                                "parameters": {
                                    "functionAppURL": {
                                        "value": "@pipeline().parameters.pipelineParameters.functionAppURL",
                                        "type": "Expression"
                                    },
                                    "secretName": {
                                        "value": "@pipeline().parameters.pipelineParameters.powerShellFunctionServicePrincipalSecret",
                                        "type": "Expression"
                                    },
                                    "keyvaultURL": {
                                        "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        },
                        {
                            "name": "Set Load Data For initial load",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Set Api Filter from latest record in raw_copy1",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "loadData",
                                "value": {
                                    "value": "@bool(1)",
                                    "type": "Expression"
                                }
                            }
                        }
                    ],
                    "ifTrueActivities": [
                        {
                            "name": "Set Api Filter",
                            "type": "SetVariable",
                            "dependsOn": [],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "apiFilterCriteria",
                                "value": {
                                    "value": "@concat('')",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "Set Load Data For Full Load",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Set Api Filter",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "loadData",
                                "value": {
                                    "value": "@bool(1)",
                                    "type": "Expression"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "name": "Check Load Data",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "Check Load Type",
                        "dependencyConditions": [
                            "Completed"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@or(\r\n    variables('loadData')\r\n    , greater(int(activity('Get new data').output.total_entries), 0)\r\n)",
                        "type": "Expression"
                    },
                    "ifTrueActivities": [
                        {
                            "name": "Copy API using API key in query string",
                            "type": "Copy",
                            "dependsOn": [
                                {
                                    "activity": "Set Raw File Name",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                },
                                {
                                    "activity": "new-mapping",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "RestSource",
                                    "additionalColumns": [
                                        {
                                            "name": "_LoadTimestamp",
                                            "value": {
                                                "value": "@formatDateTime(utcNow(),'u')",
                                                "type": "Expression"
                                            }
                                        },
                                        {
                                            "name": "_LoadWorkspace",
                                            "value": {
                                                "value": "@pipeline().DataFactory",
                                                "type": "Expression"
                                            }
                                        },
                                        {
                                            "name": "_LoadPipeline",
                                            "value": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            }
                                        },
                                        {
                                            "name": "_LoadPipelineRunId",
                                            "value": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            }
                                        },
                                        {
                                            "name": "_LoadPipelineTriggerId",
                                            "value": {
                                                "value": "@pipeline().TriggerId",
                                                "type": "Expression"
                                            }
                                        },
                                        {
                                            "name": "_LoadPipelineTrigger",
                                            "value": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            }
                                        },
                                        {
                                            "name": "_LoadPipelineTriggerType",
                                            "value": {
                                                "value": "@pipeline().TriggerType",
                                                "type": "Expression"
                                            }
                                        },
                                        {
                                            "name": "_LoadPipelineTriggerTime",
                                            "value": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            }
                                        },
                                        {
                                            "name": "_LoadPipelineTriggeredByPipeline",
                                            "value": {
                                                "value": "@pipeline()?.TriggeredByPipelineName",
                                                "type": "Expression"
                                            }
                                        },
                                        {
                                            "name": "_LoadPipelineTriggeredByRunId",
                                            "value": {
                                                "value": "@pipeline()?.TriggeredByPipelineRunId",
                                                "type": "Expression"
                                            }
                                        },
                                        {
                                            "name": "_LoadSource",
                                            "value": {
                                                "value": "@pipeline().parameters.pipelineParameters.rawDirectory",
                                                "type": "Expression"
                                            }
                                        }
                                    ],
                                    "httpRequestTimeout": "00:40:00",
                                    "requestInterval": "00.00:00:01.000",
                                    "requestMethod": "POST",
                                    "requestBody": {
                                        "value": "{\n\"collectionReference\": \"@{pipeline().parameters.pipelineParameters.collectionReference}\",\n\"requestURL\": \"@{concat(\n                    pipeline().parameters.pipelineParameters.server\n                    , '/'\n                    ,pipeline().parameters.pipelineParameters.resourcepath\n                    ,'?api_key='\n                    ,activity('Get ClientSecret').output.value\n                    ,'&with_deleted=true&'\n                    ,variables('apiFilterCriteria')\n                )}\",\n\"reqestType\": \"Get\"\n}",
                                        "type": "Expression"
                                    },
                                    "paginationRules": {
                                        "QueryParameters.{page}": "RANGE:1::1",
                                        "EndCondition:$.result_complete": "Const:true"
                                    }
                                },
                                "sink": {
                                    "type": "ParquetSink",
                                    "storeSettings": {
                                        "type": "AzureBlobFSWriteSettings"
                                    },
                                    "formatSettings": {
                                        "type": "ParquetWriteSettings"
                                    }
                                },
                                "enableStaging": false,
                                "parallelCopies": 32,
                                "dataIntegrationUnits": 32,
                                "translator": {
                                    "value": "@activity('new-mapping').output",
                                    "type": "Expression"
                                }
                            },
                            "inputs": [
                                {
                                    "referenceName": "REST_Anonymous",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "url": {
                                            "value": "@pipeline().parameters.pipelineParameters.functionAppURL",
                                            "type": "Expression"
                                        },
                                        "relativeUrl": {
                                            "value": "@concat(\n    '/api/get-vWorks-json-response'\n    ,'?page={page}&perPage=500'\n)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "outputs": [
                                {
                                    "referenceName": "Parquet_DataLake",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "datalakeURL": {
                                            "value": "@pipeline().parameters.pipelineParameters.datalakeurl",
                                            "type": "Expression"
                                        },
                                        "fileSystem": {
                                            "value": "@toLower(pipeline().parameters.pipelineParameters.fileSystem)",
                                            "type": "Expression"
                                        },
                                        "directory": {
                                            "value": "@toLower(concat(\n    pipeline().parameters.pipelineParameters.rawDirectory\n    ,'/'\n    ,pipeline().parameters.pipelineParameters.table\n    ,'/year=',formatDateTime(variables('_LocalPipelineTriggerTime'),'yyyy')\n    ,'/month=',formatDateTime(variables('_LocalPipelineTriggerTime'),'MM')\n    ,'/day=',formatDateTime(variables('_LocalPipelineTriggerTime'),'dd')\n))",
                                            "type": "Expression"
                                        },
                                        "fileName": {
                                            "value": "@toLower(variables('rawFileName'))",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "name": "get-FieldMappingsSharePoint",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.00:20:00",
                                "retry": 1,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "SharePointOnlineListSource",
                                    "query": {
                                        "value": "$filter = @{pipeline().parameters.pipelineParameters.mappingFieldsFilter}",
                                        "type": "Expression"
                                    },
                                    "httpRequestTimeout": "00:05:00"
                                },
                                "dataset": {
                                    "referenceName": "SharePointList",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "list": "FieldMapping",
                                        "sharepointURL": {
                                            "value": "@pipeline().parameters.pipelineParameters.sharepointURL",
                                            "type": "Expression"
                                        },
                                        "tenantID": {
                                            "value": "@pipeline().parameters.pipelineParameters.tenantID",
                                            "type": "Expression"
                                        },
                                        "sharepointServicePrincipalID": {
                                            "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalID",
                                            "type": "Expression"
                                        },
                                        "sharepointServicePrincipalSecret": {
                                            "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalSecret",
                                            "type": "Expression"
                                        },
                                        "keyvaultURL": {
                                            "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "firstRowOnly": false
                            }
                        },
                        {
                            "name": "new-mapping",
                            "type": "AzureFunctionActivity",
                            "dependsOn": [
                                {
                                    "activity": "get-FieldMappingsSharePoint",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                },
                                {
                                    "activity": "get-DefaultAdditionalColumnsSharePoint",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "0.00:20:00",
                                "retry": 1,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "functionName": "new-mapping",
                                "method": "POST",
                                "body": {
                                    "value": "{\n\"entityColumns\": @{activity('get-FieldMappingsSharePoint').output.value},\n\"additionalColumns\": @{activity('get-DefaultAdditionalColumnsSharePoint').output.value},\n\"collectionReference\": \"@{pipeline().parameters.pipelineParameters.collectionReference}\"\n}",
                                    "type": "Expression"
                                }
                            },
                            "linkedServiceName": {
                                "referenceName": "PowerShellFunction",
                                "type": "LinkedServiceReference",
                                "parameters": {
                                    "functionAppURL": {
                                        "value": "@pipeline().parameters.pipelineParameters.functionAppURL",
                                        "type": "Expression"
                                    },
                                    "secretName": {
                                        "value": "@pipeline().parameters.pipelineParameters.powerShellFunctionServicePrincipalSecret",
                                        "type": "Expression"
                                    },
                                    "keyvaultURL": {
                                        "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        },
                        {
                            "name": "get-DefaultAdditionalColumnsSharePoint",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "SharePointOnlineListSource",
                                    "httpRequestTimeout": "00:05:00"
                                },
                                "dataset": {
                                    "referenceName": "SharePointList",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "list": "DefaultAdditionalColumn",
                                        "sharepointURL": {
                                            "value": "@pipeline().parameters.pipelineParameters.sharepointURL",
                                            "type": "Expression"
                                        },
                                        "tenantID": {
                                            "value": "@pipeline().parameters.pipelineParameters.tenantID",
                                            "type": "Expression"
                                        },
                                        "sharepointServicePrincipalID": {
                                            "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalID",
                                            "type": "Expression"
                                        },
                                        "sharepointServicePrincipalSecret": {
                                            "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalSecret",
                                            "type": "Expression"
                                        },
                                        "keyvaultURL": {
                                            "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "firstRowOnly": false
                            }
                        },
                        {
                            "name": "Set _LocalPipelineTriggerTime for Sharepoint_copy1",
                            "type": "SetVariable",
                            "dependsOn": [],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "_LocalPipelineTriggerTime",
                                "value": {
                                    "value": "@convertFromUtc(\n    pipeline().TriggerTime\n    ,pipeline().parameters.pipelineParameters.localTimeZone\n)",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "Set Raw File Name",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Set _LocalPipelineTriggerTime for Sharepoint_copy1",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "rawFileName",
                                "value": {
                                    "value": "@concat(\n    pipeline().parameters.pipelineParameters.table\n    ,'_'\n    ,formatDateTime(\n        variables('_LocalPipelineTriggerTime')\n        ,'yyyy-MM-dd_HH-mm-ss'\n    )\n    ,'.parquet'\n)",
                                    "type": "Expression"
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "pipelineParameters": {
                "type": "object",
                "defaultValue": {
                    "datalakeurl": "https://cartersdevdatalake.dfs.core.windows.net",
                    "sourceName": "Vwork",
                    "functionalArea": "test1",
                    "companyCode": "ctr",
                    "fileSystem": "1-raw",
                    "forceLoad": "False",
                    "user": "",
                    "secret": "CartersVworkApiKey",
                    "watermarkField": "",
                    "loadType": "FULL",
                    "schema": "",
                    "authType": "Anonymous",
                    "Server": "https://api.vworkapp.com/api",
                    "rawDirectory": "Vwork",
                    "table": "job",
                    "database": "",
                    "localTimeZone": "New Zealand Standard Time",
                    "IR": "Azure",
                    "sourceType": "Vwork",
                    "mappingFieldsFilter": "SourceEntityNameId eq 152",
                    "keyvaultURL": "https://carters-dev-synapse-kv.vault.azure.net",
                    "functionAppURL": "https://carters-nonprod-synapse-ps-fnapp.azurewebsites.net",
                    "powerShellFunctionServicePrincipalSecret": "CartersSynapsePowerShellFunctionServicePrincipal",
                    "sharePointURL": "https://carterholtharvey.sharepoint.com/sites/CartersSynapseDEV",
                    "sharepointServicePrincipalID": "9220d657-b404-497f-8282-160909458317",
                    "sharepointServicePrincipalSecret": "CartersSynapseSharePointServicePrincipal",
                    "tenantId": "33bf2332-a9ad-4005-835b-af44567b2122",
                    "resourcePath": "v5/jobs.xml",
                    "entityFilter": "",
                    "delimiter": "",
                    "firstRowHeader": "",
                    "entityType": "API",
                    "collectionReference": "jobs"
                }
            }
        },
        "variables": {
            "apiFilterCriteria": {
                "type": "String"
            },
            "_LocalPipelineTriggerTime": {
                "type": "String"
            },
            "rawFileName": {
                "type": "String"
            },
            "loadData": {
                "type": "Boolean"
            }
        },
        "folder": {
            "name": "_framework/Sources"
        },
        "annotations": []
    }
}