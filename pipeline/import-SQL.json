{
    "name": "import-SQL",
    "properties": {
        "activities": [
            {
                "name": "Switch Auth Type and IR For Load Source Data",
                "type": "Switch",
                "dependsOn": [
                    {
                        "activity": "Load Data",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "on": {
                        "value": "@variables('authTypeIR')",
                        "type": "Expression"
                    },
                    "cases": [
                        {
                            "value": "WINDOWS_ONPREMISES",
                            "activities": [
                                {
                                    "name": "Copy data Windows Auth and OnPremises IR",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "new-mapping Windows Auth On Premises",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:40:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [
                                        {
                                            "name": "Source",
                                            "value": "@{pipeline().parameters.pipelineParameters.schema}.@{pipeline().parameters.pipelineParameters.table}"
                                        },
                                        {
                                            "name": "Destination",
                                            "value": "@{'1-raw'}/@{variables('rawDirectory')}/@{variables('rawFileName')}"
                                        }
                                    ],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "_LoadTimestamp",
                                                    "value": {
                                                        "value": "@formatDateTime(utcNow(),'u')",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadWorkspace",
                                                    "value": {
                                                        "value": "@pipeline().DataFactory",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipeline",
                                                    "value": {
                                                        "value": "@pipeline().Pipeline",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipelineRunId",
                                                    "value": {
                                                        "value": "@pipeline().RunId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipelineTriggerId",
                                                    "value": {
                                                        "value": "@pipeline().TriggerId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipelineTrigger",
                                                    "value": {
                                                        "value": "@pipeline().TriggerName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipelineTriggerType",
                                                    "value": {
                                                        "value": "@pipeline().TriggerType",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipelineTriggerTime",
                                                    "value": {
                                                        "value": "@pipeline().TriggerTime",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipelineTriggeredByPipeline",
                                                    "value": {
                                                        "value": "@pipeline()?.TriggeredByPipelineName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipelineTriggeredByRunId",
                                                    "value": {
                                                        "value": "@pipeline()?.TriggeredByPipelineRunId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadSource",
                                                    "value": {
                                                        "value": "@pipeline().parameters.pipelineParameters.rawDirectory",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "sqlReaderQuery": {
                                                "value": "@variables('loadQuery')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "ParquetSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "ParquetWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "value": "@activity('new-mapping Windows Auth On Premises').output",
                                            "type": "Expression"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "SQL_OnPremises_WindowsAuth",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "server": {
                                                    "value": "@pipeline().parameters.pipelineParameters.server",
                                                    "type": "Expression"
                                                },
                                                "database": {
                                                    "value": "@pipeline().parameters.pipelineParameters.database",
                                                    "type": "Expression"
                                                },
                                                "user": {
                                                    "value": "@pipeline().parameters.pipelineParameters.user",
                                                    "type": "Expression"
                                                },
                                                "secret": {
                                                    "value": "@pipeline().parameters.pipelineParameters.secret",
                                                    "type": "Expression"
                                                },
                                                "schema": {
                                                    "value": "@pipeline().parameters.pipelineParameters.schema",
                                                    "type": "Expression"
                                                },
                                                "table": {
                                                    "value": "@pipeline().parameters.pipelineParameters.table",
                                                    "type": "Expression"
                                                },
                                                "keyvaultURL": {
                                                    "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "Parquet_DataLake",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "datalakeURL": {
                                                    "value": "@pipeline().parameters.pipelineParameters.datalakeURL",
                                                    "type": "Expression"
                                                },
                                                "fileSystem": {
                                                    "value": "@toLower(pipeline().parameters.pipelineParameters.fileSystem)",
                                                    "type": "Expression"
                                                },
                                                "directory": {
                                                    "value": "@toLower(variables('rawDirectory'))",
                                                    "type": "Expression"
                                                },
                                                "fileName": {
                                                    "value": "@toLower(variables('rawFileName'))",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Get Source Metadata Windows Auth and OnPremises IR",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "SQL_OnPremises_WindowsAuth",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "server": {
                                                    "value": "@pipeline().parameters.pipelineParameters.server",
                                                    "type": "Expression"
                                                },
                                                "database": {
                                                    "value": "@pipeline().parameters.pipelineParameters.database",
                                                    "type": "Expression"
                                                },
                                                "user": {
                                                    "value": "@pipeline().parameters.pipelineParameters.user",
                                                    "type": "Expression"
                                                },
                                                "secret": {
                                                    "value": "@pipeline().parameters.pipelineParameters.secret",
                                                    "type": "Expression"
                                                },
                                                "schema": {
                                                    "value": "@pipeline().parameters.pipelineParameters.schema",
                                                    "type": "Expression"
                                                },
                                                "table": {
                                                    "value": "@pipeline().parameters.pipelineParameters.table",
                                                    "type": "Expression"
                                                },
                                                "keyvaultURL": {
                                                    "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "structure",
                                            "columnCount",
                                            "exists"
                                        ]
                                    }
                                },
                                {
                                    "name": "new-mapping Windows Auth On Premises",
                                    "type": "AzureFunctionActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Source Metadata Windows Auth and OnPremises IR",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:20:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "functionName": "new-mapping",
                                        "method": "POST",
                                        "body": {
                                            "value": "{\n\"entityColumns\": @{if(not(empty(activity('get-FieldMappings').output.value[0])),activity('get-FieldMappings').output.value,activity('Get Source Metadata Windows Auth and OnPremises IR').output.structure)},\n\"additionalColumns\": @{activity('get-DefaultAdditionalColumns').output.value}\n}",
                                            "type": "Expression"
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "PowerShellFunction",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "functionAppURL": {
                                                "value": "@pipeline().parameters.pipelineParameters.functionAppURL",
                                                "type": "Expression"
                                            },
                                            "secretName": {
                                                "value": "@pipeline().parameters.pipelineParameters.powerShellFunctionServicePrincipalSecret",
                                                "type": "Expression"
                                            },
                                            "keyvaultURL": {
                                                "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "value": "SQL_ONPREMISES",
                            "activities": [
                                {
                                    "name": "Copy data SQLAuth and OnPremises IR",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "new-mapping SQLAuth On Premises",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:40:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [
                                        {
                                            "name": "Source",
                                            "value": "@{pipeline().parameters.pipelineParameters.schema}.@{pipeline().parameters.pipelineParameters.table}"
                                        },
                                        {
                                            "name": "Destination",
                                            "value": "@{'1-raw'}/@{variables('rawDirectory')}/@{variables('rawFileName')}"
                                        }
                                    ],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "_LoadTimestamp",
                                                    "value": {
                                                        "value": "@formatDateTime(utcNow(),'u')",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadWorkspace",
                                                    "value": {
                                                        "value": "@pipeline().DataFactory",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipeline",
                                                    "value": {
                                                        "value": "@pipeline().Pipeline",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipelineRunId",
                                                    "value": {
                                                        "value": "@pipeline().RunId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipelineTriggerId",
                                                    "value": {
                                                        "value": "@pipeline().TriggerId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipelineTrigger",
                                                    "value": {
                                                        "value": "@pipeline().TriggerName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipelineTriggerType",
                                                    "value": {
                                                        "value": "@pipeline().TriggerType",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipelineTriggerTime",
                                                    "value": {
                                                        "value": "@pipeline().TriggerTime",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipelineTriggeredByPipeline",
                                                    "value": {
                                                        "value": "@pipeline()?.TriggeredByPipelineName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadPipelineTriggeredByRunId",
                                                    "value": {
                                                        "value": "@pipeline()?.TriggeredByPipelineRunId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "_LoadSource",
                                                    "value": {
                                                        "value": "@pipeline().parameters.pipelineParameters.rawDirectory",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "sqlReaderQuery": {
                                                "value": "@variables('loadQuery')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "ParquetSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "ParquetWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "value": "@activity('new-mapping SQLAuth On Premises').output",
                                            "type": "Expression"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "SQL_OnPremises_SQLAuth",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "server": {
                                                    "value": "@pipeline().parameters.pipelineParameters.server",
                                                    "type": "Expression"
                                                },
                                                "database": {
                                                    "value": "@pipeline().parameters.pipelineParameters.server",
                                                    "type": "Expression"
                                                },
                                                "schema": {
                                                    "value": "@pipeline().parameters.pipelineParameters.schema",
                                                    "type": "Expression"
                                                },
                                                "table": {
                                                    "value": "@pipeline().parameters.pipelineParameters.table",
                                                    "type": "Expression"
                                                },
                                                "user": {
                                                    "value": "@pipeline().parameters.pipelineParameters.user",
                                                    "type": "Expression"
                                                },
                                                "secret": {
                                                    "value": "@pipeline().parameters.pipelineParameters.secret",
                                                    "type": "Expression"
                                                },
                                                "keyvaultURL": {
                                                    "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "Parquet_DataLake",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "datalakeURL": {
                                                    "value": "@pipeline().parameters.pipelineParameters.datalakeURL",
                                                    "type": "Expression"
                                                },
                                                "fileSystem": {
                                                    "value": "@toLower(pipeline().parameters.pipelineParameters.fileSystem)",
                                                    "type": "Expression"
                                                },
                                                "directory": {
                                                    "value": "@toLower(variables('rawDirectory'))",
                                                    "type": "Expression"
                                                },
                                                "fileName": {
                                                    "value": "@toLower(variables('rawFileName'))",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Get Source Metadata SQLAuth and OnPremises IR",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "SQL_OnPremises_SQLAuth",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "server": {
                                                    "value": "@pipeline().parameters.pipelineParameters.server",
                                                    "type": "Expression"
                                                },
                                                "database": {
                                                    "value": "@pipeline().parameters.pipelineParameters.database",
                                                    "type": "Expression"
                                                },
                                                "schema": {
                                                    "value": "@pipeline().parameters.pipelineParameters.schema",
                                                    "type": "Expression"
                                                },
                                                "table": {
                                                    "value": "@pipeline().parameters.pipelineParameters.table",
                                                    "type": "Expression"
                                                },
                                                "user": {
                                                    "value": "@pipeline().parameters.pipelineParameters.user",
                                                    "type": "Expression"
                                                },
                                                "secret": {
                                                    "value": "@pipeline().parameters.pipelineParameters.secret",
                                                    "type": "Expression"
                                                },
                                                "keyvaultURL": {
                                                    "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "structure",
                                            "columnCount",
                                            "exists"
                                        ]
                                    }
                                },
                                {
                                    "name": "new-mapping SQLAuth On Premises",
                                    "type": "AzureFunctionActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Source Metadata SQLAuth and OnPremises IR",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:20:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "functionName": "new-mapping",
                                        "method": "POST",
                                        "body": {
                                            "value": "{\n\"entityColumns\": @{if(not(empty(activity('get-FieldMappings').output.value[0])),activity('get-FieldMappings').output.value,activity('Get Source Metadata SQLAuth and OnPremises IR').output.structure)},\n\"additionalColumns\": @{activity('get-DefaultAdditionalColumns').output.value}\n}",
                                            "type": "Expression"
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "PowerShellFunction",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "functionAppURL": {
                                                "value": "@pipeline().parameters.pipelineParameters.functionAppURL",
                                                "type": "Expression"
                                            },
                                            "secretName": {
                                                "value": "@pipeline().parameters.pipelineParameters.powerShellFunctionServicePrincipalSecret",
                                                "type": "Expression"
                                            },
                                            "keyvaultURL": {
                                                "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "Check Load Type",
                "type": "IfCondition",
                "dependsOn": [],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@equals('FULL', toUpper(pipeline().parameters.pipelineParameters.loadType))",
                        "type": "Expression"
                    },
                    "ifFalseActivities": [
                        {
                            "name": "Lookup Latest File in Raw",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.00:20:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "SqlDWSource",
                                    "sqlReaderQuery": {
                                        "value": "@concat('SELECT\n    max([result].filepath()) as latestFile\nFROM\n    OPENROWSET(\n        BULK '''\n        ,pipeline().parameters.pipelineParameters.datalakeURL\n        ,'/'\n        ,toLower(pipeline().parameters.pipelineParameters.fileSystem)\n        ,'/'\n        ,toLower(pipeline().parameters.pipelineParameters.rawDirectory)\n        ,'/'\n        ,toLower(pipeline().parameters.pipelineParameters.table)\n        ,'/year=*/month=*/day=*/*.parquet'', FORMAT=''PARQUET''\n    ) AS [result]')",
                                        "type": "Expression"
                                    },
                                    "queryTimeout": "02:00:00",
                                    "partitionOption": "None"
                                },
                                "dataset": {
                                    "referenceName": "AzureSynapseAnalyticsServerlessSQLQuery",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "database": {
                                            "value": "default",
                                            "type": "Expression"
                                        },
                                        "synapseWorkspaceName": {
                                            "value": "@pipeline().DataFactory",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "name": "Lookup Latest Record in Raw",
                            "type": "Lookup",
                            "dependsOn": [
                                {
                                    "activity": "Lookup Latest File in Raw",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "0.00:20:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "SqlDWSource",
                                    "sqlReaderQuery": {
                                        "value": "@concat('SELECT\n    max([',pipeline().parameters.pipelineParameters.watermarkField,']) as watermarkValue\nFROM\n    OPENROWSET(\n        BULK ''',activity('Lookup Latest File in Raw').output.firstRow.latestFile,''', FORMAT=''PARQUET''\n    ) AS [result]')",
                                        "type": "Expression"
                                    },
                                    "queryTimeout": "02:00:00",
                                    "partitionOption": "None"
                                },
                                "dataset": {
                                    "referenceName": "AzureSynapseAnalyticsServerlessSQLQuery",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "database": {
                                            "value": "default",
                                            "type": "Expression"
                                        },
                                        "synapseWorkspaceName": {
                                            "value": "@pipeline().DataFactory",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "name": "Set loadStart from latest record in raw",
                            "description": "",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Lookup Latest Record in Raw",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "loadStart",
                                "value": {
                                    "value": "@if(\n    equals('WINDOWED'\n        , toUpper(pipeline().parameters.pipelineParameters.loadType)\n    )\n    ,formatDateTime(activity('Lookup Latest Record in Raw').output.firstRow.watermarkValue, 'yyyy-MM-dd')\n    ,activity('Lookup Latest Record in Raw').output.firstRow.watermarkValue\n)",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "Set loadQuery",
                            "description": "Load query is set based on loadType\nWhen LoadType is 'INCREMENTAL'\nquery is \n\"Select * from sourceTable where WATERMARKCOLUMN > LOADSTARTDATE\"\n\nWhen LoadType is 'WINDOWED'\nquery is  \n\"Select * from sourceTable where WATERMARKCOLUMN > LOADSTARTDATE and WATERMARKCOLUMN <= LOADSTART + 1 DAY\"",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Set loadStart from latest record in raw",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "loadQuery",
                                "value": {
                                    "value": "@concat(\n    'select * from ',pipeline().parameters.pipelineParameters.schema,'.',pipeline().parameters.pipelineParameters.table\n    ,' where ',pipeline().parameters.pipelineParameters.watermarkField,' > ','''',variables('loadStart'),''''\n            ,if(equals('WINDOWED', toUpper(pipeline().parameters.pipelineParameters.loadType))\n                ,concat(\n\t\t\t\t\t' and '\n\t\t\t\t\t,pipeline().parameters.pipelineParameters.watermarkField\n\t\t\t\t\t,' <= ',''''\n\t\t\t\t\t,formatDateTime(addToTime(variables('loadStart'),1,'Day'), 'yyyy-MM-dd')\n\t\t\t\t\t,''''\n\t\t\t\t)\n\t\t\t\t,''\n            )    \n)",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "Set loadQuery for initial load",
                            "description": "Initial Load query will load full data from source irrespective of LoadType",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Lookup Latest File in Raw",
                                    "dependencyConditions": [
                                        "Failed"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "loadQuery",
                                "value": {
                                    "value": "@concat(\n    'select * from '\n        ,pipeline().parameters.pipelineParameters.schema\n            ,'.',pipeline().parameters.pipelineParameters.table\n)",
                                    "type": "Expression"
                                }
                            }
                        }
                    ],
                    "ifTrueActivities": [
                        {
                            "name": "Set loadQuery for full load",
                            "type": "SetVariable",
                            "dependsOn": [],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "loadQuery",
                                "value": {
                                    "value": "@concat('SELECT * From '\n  ,pipeline().parameters.pipelineParameters.schema\n  ,'.'\n  ,pipeline().parameters.pipelineParameters.table)",
                                    "type": "Expression"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "name": "Load Data",
                "description": "Check if source system have data to load",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "Switch Auth Type and IR For Check Source Data",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@or(\n    variables('loadData'),\n    bool(\n        coalesce(\n            pipeline().parameters.pipelineParameters.forceLoad\n            ,false\n        )   \n    )\n)",
                        "type": "Expression"
                    },
                    "ifTrueActivities": [
                        {
                            "name": "Set rawDirectory",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Set _LocalPipelineTriggerTime",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "rawDirectory",
                                "value": {
                                    "value": "@concat(\n    pipeline().parameters.pipelineParameters.rawDirectory\n    ,'/'\n    ,pipeline().parameters.pipelineParameters.table\n    ,'/year=',formatDateTime(variables('_LocalPipelineTriggerTime'),'yyyy')\n    ,'/month=',formatDateTime(variables('_LocalPipelineTriggerTime'),'MM')\n    ,'/day=',formatDateTime(variables('_LocalPipelineTriggerTime'),'dd')\n)",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "Set fileName",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Set _LocalPipelineTriggerTime",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "rawFileName",
                                "value": {
                                    "value": "@concat(\n    pipeline().parameters.pipelineParameters.table\n    ,'_'\n    ,formatDateTime(\n        variables('_LocalPipelineTriggerTime')\n        ,'yyyy-MM-dd_HH-mm-ss'\n    )\n    ,'.parquet'\n)",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "Set _LocalPipelineTriggerTime",
                            "type": "SetVariable",
                            "dependsOn": [],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "_LocalPipelineTriggerTime",
                                "value": {
                                    "value": "@convertFromUtc(\n    pipeline().TriggerTime\n    ,pipeline().parameters.pipelineParameters.localTimeZone\n)",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "Set authTypeIR",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Set rawDirectory",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                },
                                {
                                    "activity": "Set fileName",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                },
                                {
                                    "activity": "get-DefaultAdditionalColumns",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                },
                                {
                                    "activity": "get-FieldMappings",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "authTypeIR",
                                "value": {
                                    "value": "@concat(\n        toUpper(pipeline().parameters.pipelineParameters.authType)\n        ,'_'\n        ,toUpper(pipeline().parameters.pipelineParameters.IR)\n    )",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "get-DefaultAdditionalColumns",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "SharePointOnlineListSource",
                                    "httpRequestTimeout": "00:05:00"
                                },
                                "dataset": {
                                    "referenceName": "SharePointList",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "list": "DefaultAdditionalColumn",
                                        "sharepointURL": {
                                            "value": "@pipeline().parameters.pipelineParameters.sharepointURL",
                                            "type": "Expression"
                                        },
                                        "tenantID": {
                                            "value": "@pipeline().parameters.pipelineParameters.sharepointTenantId",
                                            "type": "Expression"
                                        },
                                        "sharepointServicePrincipalID": {
                                            "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalID",
                                            "type": "Expression"
                                        },
                                        "sharepointServicePrincipalSecret": {
                                            "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalSecret",
                                            "type": "Expression"
                                        },
                                        "keyvaultURL": {
                                            "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "firstRowOnly": false
                            }
                        },
                        {
                            "name": "get-FieldMappings",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.00:20:00",
                                "retry": 1,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "SharePointOnlineListSource",
                                    "query": {
                                        "value": "$filter = @{pipeline().parameters.pipelineParameters.mappingFieldsFilter}",
                                        "type": "Expression"
                                    },
                                    "httpRequestTimeout": "00:05:00"
                                },
                                "dataset": {
                                    "referenceName": "SharePointList",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "list": "FieldMapping",
                                        "sharepointURL": {
                                            "value": "@pipeline().parameters.pipelineParameters.sharepointURL",
                                            "type": "Expression"
                                        },
                                        "tenantID": {
                                            "value": "@pipeline().parameters.pipelineParameters.sharepointTenantId",
                                            "type": "Expression"
                                        },
                                        "sharepointServicePrincipalID": {
                                            "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalID",
                                            "type": "Expression"
                                        },
                                        "sharepointServicePrincipalSecret": {
                                            "value": "@pipeline().parameters.pipelineParameters.sharepointServicePrincipalSecret",
                                            "type": "Expression"
                                        },
                                        "keyvaultURL": {
                                            "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "firstRowOnly": false
                            }
                        }
                    ]
                }
            },
            {
                "name": "Switch Auth Type and IR For Check Source Data",
                "type": "Switch",
                "dependsOn": [
                    {
                        "activity": "Check Load Type",
                        "dependencyConditions": [
                            "Completed"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "on": {
                        "value": "@concat(\n        toUpper(pipeline().parameters.pipelineParameters.authType)\n        ,'_'\n        ,toUpper(pipeline().parameters.pipelineParameters.IR)\n)",
                        "type": "Expression"
                    },
                    "cases": [
                        {
                            "value": "WINDOWS_ONPREMISES",
                            "activities": [
                                {
                                    "name": "Set loadData Window Auth OnPremises IR",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Check Source for data windows auth",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "loadData",
                                        "value": {
                                            "value": "@greater(activity('Check Source for data windows auth').output.resultSetCount,0)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Check Source for data windows auth",
                                    "type": "Script",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:40:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "SQL_OnPremises_WindowsAuth",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "server": {
                                                "value": "@pipeline().parameters.pipelineParameters.server",
                                                "type": "Expression"
                                            },
                                            "database": {
                                                "value": "@pipeline().parameters.pipelineParameters.database",
                                                "type": "Expression"
                                            },
                                            "user": {
                                                "value": "@pipeline().parameters.pipelineParameters.user",
                                                "type": "Expression"
                                            },
                                            "secret": {
                                                "value": "@pipeline().parameters.pipelineParameters.secret",
                                                "type": "Expression"
                                            },
                                            "keyvaultURL": {
                                                "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "type": "Query",
                                                "text": {
                                                    "value": "@concat(\n    'Select top(1) * From ( '\n    ,variables('loadQuery')\n    ,') t'\n)",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "value": "SQL_ONPREMISES",
                            "activities": [
                                {
                                    "name": "Set loadData SQL Auth OnPremises IR",
                                    "description": "Add check of recordcount",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Check Source for data SQL auth",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "loadData",
                                        "value": {
                                            "value": "@greater(activity('Check Source for data SQL auth').output.resultSetCount,0)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Check Source for data SQL auth",
                                    "type": "Script",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:20:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "SQL_OnPremises_SQLAuth",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "keyvaultURL": {
                                                "value": "@pipeline().parameters.pipelineParameters.keyvaultURL",
                                                "type": "Expression"
                                            },
                                            "server": {
                                                "value": "@pipeline().parameters.pipelineParameters.server",
                                                "type": "Expression"
                                            },
                                            "database": {
                                                "value": "@pipeline().parameters.pipelineParameters.database",
                                                "type": "Expression"
                                            },
                                            "user": {
                                                "value": "@pipeline().parameters.pipelineParameters.user",
                                                "type": "Expression"
                                            },
                                            "secret": {
                                                "value": "@pipeline().parameters.pipelineParameters.secret",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "type": "Query",
                                                "text": {
                                                    "value": "@concat(\n    'Select top(1) * From ( '\n    ,variables('loadQuery')\n    ,') t'\n)",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ],
                    "defaultActivities": [
                        {
                            "name": "Fail",
                            "type": "Fail",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "message": {
                                    "value": "@concat(\n    'No implementaion available for Authorization type & Integrated Runtime Combination : '\n    ,pipeline().parameters.pipelineParameters.authType\n    ,'_'\n    ,pipeline().parameters.pipelineParameters.IR\n)",
                                    "type": "Expression"
                                },
                                "errorCode": {
                                    "value": "@concat(\n    'Missing-Implementation'\n    ,pipeline().parameters.pipelineParameters.authType\n    ,'_'\n    ,pipeline().parameters.pipelineParameters.IR\n)",
                                    "type": "Expression"
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "pipelineParameters": {
                "type": "object",
                "defaultValue": {
                    "datalakeurl": "https://cartersdevdatalake.dfs.core.windows.net",
                    "sourceName": "MDS",
                    "functionalArea": "Finance",
                    "companyCode": "CTR",
                    "fileSystem": "1-raw",
                    "forceLoad": "False",
                    "user": "svcCTRSynapseDEV@chhnet.net",
                    "secret": "svcCTRSynapse",
                    "watermarkField": "",
                    "loadType": "FULL",
                    "schema": "mdm",
                    "authType": "Windows",
                    "Server": "cartersmds.chhnet.net",
                    "rawDirectory": "CTR/PROD/MDS/MDS",
                    "table": "Finance_CustomerClass_To_Segment",
                    "database": "MDS",
                    "localTimeZone": "New Zealand Standard Time",
                    "IR": "OnPremises",
                    "sourceType": "SQL",
                    "mappingFieldsFilter": "SourceEntityNameId eq 163",
                    "keyvaultURL": "https://carters-dev-synapse-kv.vault.azure.net",
                    "functionAppURL": "https://carters-nonprod-synapse-ps-fnapp.azurewebsites.net",
                    "powerShellFunctionServicePrincipalSecret": "CartersSynapsePowerShellFunctionServicePrincipal",
                    "sharePointURL": "https://carterholtharvey.sharepoint.com/sites/CartersSynapseDEV",
                    "sharepointServicePrincipalID": "9220d657-b404-497f-8282-160909458317",
                    "sharepointServicePrincipalSecret": "CartersSynapseSharePointServicePrincipal",
                    "tenantId": "33bf2332-a9ad-4005-835b-af44567b2122",
                    "resourcePath": "",
                    "entityFilter": "",
                    "delimiter": "",
                    "firstRowHeader": "True",
                    "collectionReference": "",
                    "entityType": "SQL"
                }
            }
        },
        "variables": {
            "loadStart": {
                "type": "String"
            },
            "loadQuery": {
                "type": "String"
            },
            "loadData": {
                "type": "Boolean"
            },
            "rawDirectory": {
                "type": "String"
            },
            "_LocalPipelineTriggerTime": {
                "type": "String"
            },
            "rawFileName": {
                "type": "String"
            },
            "authTypeIR": {
                "type": "String"
            }
        },
        "folder": {
            "name": "_framework/Sources"
        },
        "annotations": []
    }
}